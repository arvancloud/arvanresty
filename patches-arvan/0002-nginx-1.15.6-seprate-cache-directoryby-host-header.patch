---
 src/core/ngx_file.c            | 10 ++++++++++
 src/http/ngx_http_cache.h      |  2 ++
 src/http/ngx_http_file_cache.c | 16 ++++++++++++++++
 3 files changed, 28 insertions(+)

diff --git a/src/core/ngx_file.c b/src/core/ngx_file.c
index 56780303..7beb4b2e 100644
--- a/src/core/ngx_file.c
+++ b/src/core/ngx_file.c
@@ -230,6 +230,16 @@ ngx_create_temp_file(ngx_file_t *file, ngx_path_t *path, ngx_pool_t *pool,
             return NGX_ERROR;
         }
 
+        if (ngx_create_dir(path->name.data, 0700) == NGX_FILE_ERROR) {
+            err = ngx_errno;
+            if (err != NGX_EEXIST) {
+                ngx_log_error(NGX_LOG_CRIT, file->log, err,
+                              ngx_create_dir_n " \"%s\" failed",
+							  path->name.data);
+                return NGX_ERROR;
+            }
+        }
+
         if (ngx_create_path(file, path) == NGX_ERROR) {
             return NGX_ERROR;
         }
diff --git a/src/http/ngx_http_cache.h b/src/http/ngx_http_cache.h
index f9e96640..83ea453a 100644
--- a/src/http/ngx_http_cache.h
+++ b/src/http/ngx_http_cache.h
@@ -160,6 +160,8 @@ struct ngx_http_file_cache_s {
 
     ngx_path_t                      *path;
 
+    ngx_str_t                        ar_path;
+
     off_t                            max_size;
     size_t                           bsize;
 
diff --git a/src/http/ngx_http_file_cache.c b/src/http/ngx_http_file_cache.c
index ecdf11e2..38c6f75e 100644
--- a/src/http/ngx_http_file_cache.c
+++ b/src/http/ngx_http_file_cache.c
@@ -284,6 +284,22 @@ ngx_http_file_cache_open(ngx_http_request_t *r)
 
     cache = c->file_cache;
 
+    //arvan change cache path for purge solution
+    ngx_str_t ar_original_path_name = cache->path->name;
+    if(cache->ar_path.len == 0){
+    	cache->ar_path = ar_original_path_name;
+    }
+    ngx_str_t				  ar_fake_path_name;
+    ngx_str_t host = r->headers_in.server;
+    ar_fake_path_name.len = cache->ar_path.len + host.len + 1;
+    ar_fake_path_name.data = ngx_pcalloc(r->pool, cache->ar_path.len + host.len + 1);
+    if (ar_fake_path_name.data == NULL) {
+        return NGX_HTTP_INTERNAL_SERVER_ERROR;
+    }
+    ngx_memcpy(ngx_cpymem(ngx_cpymem(ar_fake_path_name.data, cache->ar_path.data,cache->ar_path.len), "/", 1),
+    		host.data, host.len);
+    cache->path->name = ar_fake_path_name;
+
     if (c->node == NULL) {
         cln = ngx_pool_cleanup_add(r->pool, 0);
         if (cln == NULL) {
